services:
  
  server:
    container_name: ${SERVER_HOSTNAME}
    build:
      context: ./real-time-leaderboards
      dockerfile: ./deployment/docker/Dockerfile
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    environment:
      - SERVER_HOSTNAME=${SERVER_HOSTNAME}
      - SERVER_PORT=${SERVER_PORT}
      - SERVER_MODE=${SERVER_MODE}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_SCHEMA=${POSTGRES_SCHEMA}
      - POSTGRES_MAX_OPEN_CONNS=${POSTGRES_MAX_OPEN_CONNS}
      - POSTGRES_MAX_IDLE_CONNS=${POSTGRES_MAX_IDLE_CONNS}
      - POSTGRES_MAX_IDLE_TIME=${POSTGRES_MAX_IDLE_TIME}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ACCESS_TOKEN_TTL=${JWT_ACCESS_TOKEN_TTL}
      - JWT_REFRESH_TOKEN_TTL=${JWT_REFRESH_TOKEN_TTL}
    volumes:
      - ./real-time-leaderboards:/app
    depends_on:
      - postgres-db
      - redis
      - migrate
 
  postgres-db:
    container_name: ${POSTGRES_HOST}
    image: postgres:latest
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES-SCHEMA=${POSTGRES_SCHEMA}
    restart: unless-stopped
    volumes:
      - server-volume:/var/lib/postgresql/data
      - ./real-time-leaderboards/deployment/docker/volumes/postgres/init-scripts:/var/lib/postgresql/init-scripts
      - ./real-time-leaderboards/deployment/docker/volumes/postgres/queries:/var/lib/postgresql/queries

  redis:
    container_name: ${REDIS_HOST}
    image: redis/redis-stack:latest
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}", "--loadmodule", "./opt/redis-stack/lib/rejson.so"]
    restart: unless-stopped

  migrate:
    container_name: leaderboards-migrate
    image: migrate/migrate
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./real-time-leaderboards/internal/storage/migrations:/migrations
    command: ["migrate", "-path",  "/migrations", "-database", "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable", "up"]
    depends_on:
      - postgres-db

volumes:
  server-volume: